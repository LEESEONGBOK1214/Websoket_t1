02. 소켓 통신으로 채팅 프로그램 만들기.
 	출처 : https://m.blog.naver.com/highkrs/220844554537
 	
 	01 에선 소 02. 소켓 통신으로 채팅 프로그램 만들기.
 	출처 : https://m.blog.naver.com/highkrs/220844554537
 	
 	01 에선 소켓 통신의 기본 동작만을 설명했는데,
 	
 	소켓 통신의 기본은 멀티 스레드를 이용한 송수신입니다.
 	
	말이 좀 어려운데요.
	
	더 쉽게 말씀 드리자면 01에서는 메인 스레드에서 데이터 송수신을 다 했습니다.
	
	하지만 < 메인스레드는 데이터를 송수신하는 역할을 담당해서는 안됩니다. >
	
	왜냐하면 데이터 송수신은 사용자가 데이터를 입력하거나, 다른 PC에서 데이터를
	받아올때까지 무한정 대기를 해야하기 때문입니다. 
	  -> 메인 스레드가 무한정 대기하는 상황 발생..
	  
	< 개기를켓 통신의 기본 동작만을 설명했는데,
 	
 	소켓 통신의 기본은 멀티 스레드를 이용한 송수신입니다.
 	
	말이 좀 어려운데요.
	
	더 쉽게 말씀 드리자면 01에서는 메인 스레드에서 데이터 송수신을 다 했습니다.
	
	하지만  <! 메인스레드는 데이터를 송수신하는 역할을 담당해서는 안됩니다. !>
	
	왜냐하면 데이터 송수신은 사용자가 데이터를 입력하거나, 다른 PC에서 데이터를
	받아올때까지 무한정 대기를 해야하기 때문입니다. 
	  -> 메인 스레드가 무한정 대기하는 상황 발생..
	  
	<! 	대기를 하다가 사용자가 데이터를 입력한다면 입력된 데이터를 송신하거나,
	수신 대기를 하다가 소켓을 통해 데이터가 수신되면 입력된 데이터를
	콘솔창에 출력해줍니다. 
	하지만 데이터가 없다면, 송수신 둘다 무한정 대기상태가 됩니다. 	!>
	
	하지만 메인 스레드에서 이렇게 무한정 대기를 한다면 프로그램은 대기만 하느냐?
		-> 멈추게 될것입니다.
	
	그래서 2개의 새로운 워킹 스레드를 생성하여 사용해야 합니다.
	
	즉, 데이터를 송신을 담당하는 스레드와, 데이터 수신을 담당하는 스레드.
		두개를 만들어야함.
	
	#1. Thread를 활용하여 데이터 송신 스레드 만들기.
	 -> Thread란? : blog.naver.com/highkrs/220269440592
	 
	 우선 2개의 자바 파일을 만들어야 합니다. 송신 Thread, 수신 Thread.
	 
	 Server 프로젝트 내에
	 ReceiveThread.java, SendThread.java 파일 만들기.
	 
	 1.1 ReceiveThread 파일 확인.
	   
	